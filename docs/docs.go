// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/endpoints/add": {
            "post": {
                "description": "新增/修改路由配置（未携带id信息为新增）",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "endpoints"
                ],
                "summary": "新增/修改路由配置",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "配置id",
                        "name": "id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "网关配置名称",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "类型",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "路由列表",
                        "name": "routers",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Response"
                        }
                    }
                }
            }
        },
        "/endpoints/delete": {
            "post": {
                "description": "删除路由配置",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "endpoints"
                ],
                "summary": "删除路由配置",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "网关配置的id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Response"
                        }
                    }
                }
            }
        },
        "/endpoints/detail": {
            "post": {
                "description": "获取路由配置详情",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "endpoints"
                ],
                "summary": "获取路由配置详情",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "网关配置的id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Response"
                        }
                    }
                }
            }
        },
        "/endpoints/list": {
            "post": {
                "description": "获取所有路由配置",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "endpoints"
                ],
                "summary": "获取所有路由配置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "页码数",
                        "name": "page_num",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "20",
                        "description": "分页尺寸",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payload.EndPoint"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Response"
                        }
                    }
                }
            }
        },
        "/oauth/login/password": {
            "post": {
                "description": "账号密码登录",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "Oauth"
                ],
                "summary": "账号密码登录",
                "operationId": "OauthLoginPassword",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "user_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payload.OauthSuccessData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Response"
                        }
                    }
                }
            }
        },
        "/register/admin": {
            "post": {
                "description": "注册管理员用户",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "register"
                ],
                "summary": "注册管理员用户",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "user_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payload.OauthSuccessData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Response"
                        }
                    }
                }
            }
        },
        "/register/tenant": {
            "post": {
                "description": "注册租户",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "register"
                ],
                "summary": "注册租户",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "user_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payload.RegisterUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/payload.Response"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "获取当前版本",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "tags": [
                    "system"
                ],
                "summary": "获取当前版本",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "payload.EndPoint": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "routers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/payload.Router"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "payload.MiddleWareInfo": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "payload.OauthSuccessData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "toke": {
                    "type": "string"
                },
                "tokenExpireAt": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "payload.RegisterUser": {
            "type": "object",
            "required": [
                "password",
                "userName"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "payload.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "msg": {
                    "type": "string"
                },
                "type": {
                    "description": "data msg error",
                    "type": "string"
                }
            }
        },
        "payload.Router": {
            "type": "object",
            "properties": {
                "endPointId": {
                    "type": "integer"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "middlewares": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/payload.MiddleWareInfo"
                    }
                },
                "priority": {
                    "type": "integer"
                },
                "rule": {
                    "type": "string"
                },
                "tls": {
                    "$ref": "#/definitions/payload.TlsInfo"
                },
                "tlsEnable": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "upStream": {
                    "$ref": "#/definitions/payload.UpStreamInfo"
                }
            }
        },
        "payload.TlsInfo": {
            "type": "object",
            "properties": {
                "clientAuth": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "payload.UpStreamInfo": {
            "type": "object",
            "properties": {
                "loadBalance": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "weights": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
